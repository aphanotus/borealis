% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qPCR.plot.R
\name{qPCR.plot}
\alias{qPCR.plot}
\title{Plot raw qPCR data}
\source{
Dave Angelini \email{david.r.angelini@gmail.com} [aut, cre]
}
\usage{
qPCR.plot(
  std.conc = NULL,
  std.cq = NULL,
  unk.cq = NULL,
  nrt.cq = NULL,
  ntc.cq = NULL,
  main = NULL,
  xlab = "log10 template / ul",
  ylab = "Cq"
)
}
\arguments{
\item{std.conc}{A numeric vector providing the concentrations of the standards used.}

\item{std.cq}{A numeric vector of Cq values measured for the standard samples.}

\item{unk.cq}{A numeric vector of Cq values measured for unknown samples.}

\item{nrt.cq}{A numeric vector of Cq values measured for no-reverse transcription control (NRT) samples.}

\item{ntc.cq}{A numeric vector of Cq values measured for no-template control (NTC) samples.}

\item{main}{An overall title for the plot.}

\item{xlab}{A title for the x axis.}

\item{ylab}{A title for the y axis.}
}
\description{
This function takes raw qPCR data and produces a convenient plot and table,
which can be used to assess the data.
}
\details{
The function take information on the standard concentrations (unitless) and Cq values measured by
the realtime PCR instrument. A linear regression provides intercept and slope,
from which PCR efficiency is calculated. The correlation coefficient is also displayed. \

Potential outlier values in the standard Cq values are highlighted on the plot in red.
These are flagged as technical replicate more than 1.5 cycles from the median.
Efficiency values outside the range of 1.8 to 2.2 (90% - 110%) are also highlighted, as are
correlation coefficients (R^2) less than 0.9.

If they are provided, the mean negative control values (NRT and NTC) are ploted as horizontal lines
(gray and blue, respectively).
}
\examples{
std.conc <- c(rep(6,3),rep(5,3),rep(4,3),rep(3,3))
std.cq <- c(26.74, 27.33, 25.83, 29.42, 29.90, 28.10, 33.15, 33.31, 31.41, 34.56, 34.64, 34.89)
unk.cq <- c(28.031, 29.331, 29.466, 29.597, 30.168, 30.258, 30.535, 31.706, 31.779)
nrt.cq <- c(32.76, 32.80, 31.51)
ntc.cq <- c(37.08, 36.56, 38.62)

qPCR.plot(std.conc, std.cq, unk.cq, nrt.cq, ntc.cq, main="TFX (FAM)")

# In practice, it's usually convenient to scan in values copied from a spreadsheet
std.conc <- scan()

# If no inputs are provided, the function simulates data and analysis
qPCR.plot()

}
